# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

# Add this line to fix Firebase as static frameworks
$RNFirebaseAsStaticFramework = true

# Fix for Apple Silicon (M1/M2/M3) architecture compatibility
$isMacCatalystArm = RUBY_PLATFORM =~ /darwin/ && `uname -m`.strip == 'arm64'
if $isMacCatalystArm
  $arch = 'arm64'
else 
  $arch = 'x86_64'
end

ENV['DEVELOPER_DIR'] = `xcode-select -p`.strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Add this line for Firebase modules
use_modular_headers!

# Use static frameworks for Firebase
use_frameworks! :linkage => :static

target 'EnergyRaiseNew' do
  # Explicitly set versions for gRPC dependencies to fix module map issues
  pod 'gRPC-Core', :modular_headers => true
  pod 'gRPC-C++', :modular_headers => true
  
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    
    # Fix architecture compatibility issues
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Add arm64 to excluded architectures for iOS simulators
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        
        # Make sure all targets build for the same architectures
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        
        # Enable building for all architectures
        config.build_settings['VALID_ARCHS'] = 'arm64 arm64e x86_64'
        
        # Ensure Swift compatibility
        if config.build_settings['PRODUCT_MODULE_NAME'] == 'FirebaseSharedSwift'
          config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
          config.build_settings['BUILD_FOR_DISTRIBUTION'] = 'YES'
        end
      end
      
      # Specific fix for FirebaseSharedSwift module
      if target.name == "FirebaseSharedSwift" || target.name.include?("Firebase") || target.name.include?("firebase")
        target.build_configurations.each do |config|
          config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
          config.build_settings["EXCLUDED_ARCHS[sdk=iphoneos*]"] = ""
          config.build_settings['SUPPORTS_MACCATALYST'] = 'NO'
          config.build_settings["ONLY_ACTIVE_ARCH"] = "NO"
        end
      end
      
      # Disable code signing for bundles
      if target.respond_to?(:product_type) && target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end
